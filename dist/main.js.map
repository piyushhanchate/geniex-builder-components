{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEOO,MAAM,0DAAW,CAAA,GAAA,uBAAS,EAC/B,CAAC,OAAO;IACN,MAAM,aAAE,SAAS,YAAE,QAAQ,QAAE,IAAI,cAAE,UAAU,EAAE,GAAG,WAAW,GAAG;IAEhE,IAAI,AAAC,CAAC,YAAY,CAAC,QAAS,YAC1B,qBACE,gCAAC,CAAA,GAAA,kDAAK;QAAG,GAAG,SAAS;QAAE,KAAK;kBACzB;;SAGA,IAAI,CAAC,CAAC,MACX,qBACE,gCAAC,CAAA,GAAA,yCAAG;QAAE,MAAM;kBACV,cAAA,gCAAC,CAAA,GAAA,kDAAK;YAAG,GAAG,SAAS;YAAE,KAAK;sBACzB;;;SAIF,IAAI,CAAC,CAAC,UACX,qBACE,gCAAC,CAAA,GAAA,uBAAS;QACR,IAAI;QACJ,KAAK;QACL,QAAQ;QACR,QAAQ;QACR,UAAU;kBAEV,cAAA,gCAAC,CAAA,GAAA,kDAAK;YAAG,GAAG,KAAK;YAAE,KAAK;sBACrB;;;AAKX;AAGF,0CAAS,WAAW,GAAG;;;;;;ACtChB,MAAM,0DAAe,CAAA,GAAA,uBAAS,EACnC,CAAC,OAAO;IACN,MAAM,aAAE,SAAS,YAAE,QAAQ,EAAE,GAAG,WAAW,GAAG;IAC9C,qBACE,iCAAC,CAAA,GAAA,6BAAS;QAAG,GAAG,SAAS;QAAE,KAAK;;YAC7B,MAAM,SAAS;YACf,MAAM,QAAQ;;;AAGrB;AAGF,0CAAa,WAAW,GAAG;;;ACjB3B,cAAc;;;;;AAOP,MAAM,0DAAU,CAAA,GAAA,uBAAS,EAC9B,CAAC,OAAO;IACN,MAAM,aAAE,SAAS,SAAE,KAAK,OAAE,GAAG,UAAE,MAAM,eAAE,WAAW,EAAE,GAAG,WAAW,GAAG;IAErE,qBACE,gCAAC,CAAA,GAAA,sBAAE;QACD,UAAU;QACT,GAAG,SAAS;QACb,OAAO;QACP,QAAQ;QACR,KAAK;kBAEL,cAAA,gCAAC,CAAA,GAAA,0CAAI;YACH,KAAK;YACL,KAAI;YACJ,IAAI;YACJ,SAAS;YACT,OAAO;gBAAE,WAAW;gBAAW,GAAG,WAAW;YAAC;;;AAItD;AAGF,0CAAQ,WAAW,GAAG;","sources":["src/index.tsx","src/components/index.tsx","src/components/MyButton/index.tsx","src/components/MyTypography/index.tsx","src/components/MyImage/index.tsx"],"sourcesContent":["export * from './components'","export { MyButton } from \"./MyButton\";\nexport {MyTypography} from \"./MyTypography\"\nexport {MyImage} from \"./MyImage\"","import React from 'react'\nimport { forwardRef, type ReactNode } from \"react\";\nimport Button, { ButtonProps } from \"@mui/material/Button\";\nimport Link from \"next/link\";\nimport { Link as ScrollLink } from \"react-scroll\";\nimport { MyButtonProps } from \"./types\";\n\nexport const MyButton = forwardRef<HTMLButtonElement, MyButtonProps>(\n  (props, ref) => {\n    const { textValue, scrollTo, link, isDisabled, ...restProps } = props;\n\n    if ((!scrollTo && !link) || isDisabled) {\n      return (\n        <Button {...restProps} ref={ref}>\n          {textValue}\n        </Button>\n      );\n    } else if (!!link) {\n      return (\n        <Link href={link}>\n          <Button {...restProps} ref={ref}>\n            {textValue}\n          </Button>\n        </Link>\n      );\n    } else if (!!scrollTo) {\n      return (\n        <ScrollLink\n          to={scrollTo}\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          <Button {...props} ref={ref}>\n            {textValue}\n          </Button>\n        </ScrollLink>\n      );\n    }\n  }\n);\n\nMyButton.displayName = \"MyButton\";\n","import React from 'react'\nimport { forwardRef, type ReactNode } from \"react\";\nimport { Typography, TypographyProps } from \"@mui/material\";\nimport { MyTypographyProps } from \"./types\";\n\nexport const MyTypography = forwardRef<HTMLParagraphElement, MyTypographyProps>(\n  (props, ref) => {\n    const { textValue, children, ...restProps } = props;\n    return (\n      <Typography {...restProps} ref={ref}>\n        {props.textValue}\n        {props.children}\n      </Typography>\n    );\n  }\n);\n\nMyTypography.displayName = \"MyTypography\";\n","// @ts-nocheck\nimport React from 'react'\nimport { forwardRef, type ReactNode } from \"react\";\nimport { Box } from \"@mui/material\";\nimport Image from \"next/image\";\nimport { MyImageProps } from \"./types\";\n\nexport const MyImage = forwardRef<HTMLDivElement, MyImageProps>(\n  (props, ref) => {\n    const { objectFit, width, src, height, imageStyles, ...restProps } = props;\n\n    return (\n      <Box\n        position={\"relative\"}\n        {...restProps}\n        width={width}\n        height={height}\n        ref={ref}\n      >\n        <Image\n          src={src}\n          alt=\"image\"\n          fill\n          quality={100}\n          style={{ objectFit: objectFit, ...imageStyles }}\n        />\n      </Box>\n    );\n  }\n);\n\nMyImage.displayName = \"MyImage\";\n"],"names":[],"version":3,"file":"main.js.map"}